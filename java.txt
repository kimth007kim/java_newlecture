15 출력 스트림 객체와 API

출력을 위한 입력을 위한 함수는 어떤것들이있을까

자바도 다른 고급언어가 가지고있는 언어가 가지는 범주의 기능(CPU기능제어,계산,흐름제어 )갖고있지않음 그 외의 기능 출력을 하거나 입력을 하기위한것이나
저장하기 위한 모든것들은 별도의 장치를 이용해야한다. 그 장치를 재료(플랫폼)이라고 부름 플랫폼은 직접 이용할수없으며 인터페이스를 통해서 이용해야한다.
인터페이스는 함수의 형태를 갖는다. 다시 얘기하면 프로그램은 절차이다. 절차를 만들기위한 언어는 고급언어
절차를 만들떄 다양한 재료가있을텐데 카톡 페북 모니터 디스크 등등 직접 못쓰니까 API 라는것을 이용해서 사용할수있다.
카톡- Kakao.Auth().... 
페북- FB.login()
모니터- printf()
디스크- fprintf()
이 함수는 c언어가 가지고있는것이고 자바도 그런함수를 가지고있는 플랫폼을 가지고있다. JAVA Platform

자바가 가지고있는 출력을 위한 함수
write(30);
print(30.43);
println("hello");
printf("%d",30);
자바가 가지고있는 입력을 위한 함수
read();
skip();
reset();

자바는 특이하게도 이런 api 함수라는것이 함수의형태로만 이루어져있는것이 아니라 이 함수들이 묶여있다.
객체라고 하는 하나의 덩어리에 묶여있는데 
콘솔 출력을 위해서 사용하는 함수들이 묶여있는 객체 덩어리는
System.out이다.

System.out.write(30);
System.out.print(30.43);
System.out.println("hello");
System.out.printf("%d",30);

입력을 위한것은 
System.in이다.
System.in.read();
System.in.skip();
System.in.reset();

stream 객체명이 out, in 이다.
함수를 사용하거나 이용해보기전에 스트림과 객체의 용어의 의미를 먼저 알아보자.

어플리케이션에서 모니터에다가 무언가를 출력하기위해서는 write()를 사용하면됨.
그래서 write()를 세번입력하면 세번 출력하게 된다. 하지만 문제는 실제로 프로그램 만들때도 직접 모니터로 값을 전달하지않는다 왜냐하면 프로그램이라는 것 이 하나만 동작하지않는다. 여러개가 동시에 돌아가는 환경에있다.
그러다보면 장치하나를 두고 서로 싸우는 일이 발생 하나가 출력하고 싶어하는데 다른것들도 출력하고 싶어한다. 모니터는 하나이다.
해결) 가장 쉬운방법은 줄세우기 이다. 줄세우기를 다른 말로하면 동기화라고한다. 하지만 또 줄세우기를 한다면 다른 어플리케이션들은 먹통이 될것이다. 그래서 해결방안은 버퍼이다.

버퍼란
어플리케이션(결재요청자) 버퍼(결재함) 모니터(결재권자)

어플리케이션(요청자) 가 버퍼(결재함)에다가 두고가면 모니터(결재권자)가 시간될때 결재하면된다.
이렇게 동기화를 비동기로 처리하면서 모든녀석이 해피하게 출력가능하다.
이것들을 출력 버퍼라고한다. 자바에서는 OutputStream 이라고한다. 		//Stream의 뜻은 단방향 버퍼이다.

Stream은 어플리케이션들이 동기화 되는것을 막아주고 비동기형식으로 비동기형식으로 어플리케이션이 일할수있도록 도와주고 직접전달이아니라 출력버퍼에다가 값을 담아서 전달한다.
Stream을 사용할때는 개체를 사용하는게 아니라 객체를 사용한다.

개체(entity) vs 객체(Object)

개체는 타입(큰 틀? 동물로 이야기하면 종 ex) 고양이,강아지,악어,사자)

객체는 실체이다. 실체를 위해 사용되는 타입이다. 
객체는 이름을 가지게 된다. ex)장군이

출력스트림의 개체명은 OutputStream 객체명은 out
입력스트림의 개체명은 InputStream 객체명은 in	
객체명은 out in은 자바에서 만들어놓은것이다 우리가 정하는것이 아니다. (왜냐면 기본입출력이기 때문에)

out이라는 객체를 만들어놓고 거기다가 write함수를 사용해서 만들게되는데 write단독으로 쓰지않고
out.write(2)	//2라고 하는 녀석을 write하는데 out에다가 write해라
out.flush()	//out을  flush(버퍼에있는 값을 모니터에 보내기)

***중요**
자바라고 하는녀석은 객체지향으로 만들어져있기때문에 객체지향을 배우기전까지는 함수를 쓰는것이 기본이지만 그녀석을 쓸떄는 객체를 이용해서 쓴다

16 콘솔 출력과 문자코드
출력입력에서는 버퍼 사용 버퍼를 이용하는 함수들을 API라고 한다. 오늘 다룰 내용은 API
스트림은 단방향 버퍼이다. 스트림을 이용해서 데이터를 쓰거나 읽어오기전에 스트림에 담겨있는값이 어떤형태인지 알아야한다.

입력할떄 사용자가 키보드로 숫자 2를 누르면 번호로써 식별하는 번호 키코드 50번이 스트림에 들어간다.

키코드는 아스키코드이다. 영어 특수문자 숫자를 등록해놓음

한글은 어떻게 할까? ASCII+KR  EUC-KR을 사용 일본어는 ASCII+JP EUC-JP 이런방식은 한국어 일본어 중국어를 같이표현할수 없다.
그래서 요즘에는 그렇게안쓰고 UNICODE(ASCII+KR+JP+CN등등)를 사용한다.

문자를 출력할떄 코드테이블에있는 코드값을 출력한다. 모니터 출력을위해 스트림버퍼에다가 뭔가 입력을한다.
System.out.write(3);	//out은 출력스트림
System.out.flush();		//버퍼에 가득차지 않아도 출력시키기

17 콘솔 문자열 출력

write flush 를 넘어서 출력해주는 함수들은 무엇일까
print()
println()
printf()

System.out= new PrintStream(new OutputStream());	//OutputStream을 직접 사용하는것이아니라 PrintStream을 이용해 간접적으로 사용한다.

System.out.print("Hello"); 	//문자열 단위로 출력가능
System.out.print(3.45); 	//실수값을 그대로 출력가능 원래는 3.45그대로 출력하기는 어려운데 그대로 출력가능


21 콘솔 입력하기 (System.in , Scanner)

int code = System.in.read();		//문자를 하나읽음

nextLine()			//문자열(한줄) 읽음
next()			//스페이스바 단위로 하나씩하나씩
nextInt()			//단어하나 읽어서 정수형으로 바꿈
nextFloat()			//단어하나 읽어서 실수형으로 바꿈
nextDouble()			//단어하나 읽어서 실수(Double)형으로 바꿈

이런 함수를 제공하는 도구가 있다. 
new Scanner(System.in);

스캐너는 입력버퍼를 이용해서 next(),nextInt()등등을 구현한다.

Scanner scan = new Scanner(System.in);

이렇게되면 scan을 이용해서 new Scanner 객체를 이용하게 되면 내부적으로 next(),nextInt()등등의 서비스를 제공한다.





